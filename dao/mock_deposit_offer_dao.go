// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chain4travel/camino-signavault/dao (interfaces: DepositOfferDao)

// Package dao is a generated GoMock package.
package dao

import (
	reflect "reflect"

	model "github.com/chain4travel/camino-signavault/model"
	gomock "github.com/golang/mock/gomock"
)

// MockDepositOfferDao is a mock of DepositOfferDao interface.
type MockDepositOfferDao struct {
	ctrl     *gomock.Controller
	recorder *MockDepositOfferDaoMockRecorder
}

// MockDepositOfferDaoMockRecorder is the mock recorder for MockDepositOfferDao.
type MockDepositOfferDaoMockRecorder struct {
	mock *MockDepositOfferDao
}

// NewMockDepositOfferDao creates a new mock instance.
func NewMockDepositOfferDao(ctrl *gomock.Controller) *MockDepositOfferDao {
	mock := &MockDepositOfferDao{ctrl: ctrl}
	mock.recorder = &MockDepositOfferDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepositOfferDao) EXPECT() *MockDepositOfferDaoMockRecorder {
	return m.recorder
}

// AddSignature mocks base method.
func (m *MockDepositOfferDao) AddSignature(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSignature", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSignature indicates an expected call of AddSignature.
func (mr *MockDepositOfferDaoMockRecorder) AddSignature(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSignature", reflect.TypeOf((*MockDepositOfferDao)(nil).AddSignature), arg0, arg1, arg2)
}

// GetSignatures mocks base method.
func (m *MockDepositOfferDao) GetSignatures(arg0 string) (*[]model.DepositOfferSig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignatures", arg0)
	ret0, _ := ret[0].(*[]model.DepositOfferSig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSignatures indicates an expected call of GetSignatures.
func (mr *MockDepositOfferDaoMockRecorder) GetSignatures(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignatures", reflect.TypeOf((*MockDepositOfferDao)(nil).GetSignatures), arg0)
}
