// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/chain4travel/camino-signavault/service (interfaces: NodeService)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	model "github.com/chain4travel/camino-signavault/model"
	gomock "github.com/golang/mock/gomock"
)

// MockNodeService is a mock of NodeService interface.
type MockNodeService struct {
	ctrl     *gomock.Controller
	recorder *MockNodeServiceMockRecorder
}

// MockNodeServiceMockRecorder is the mock recorder for MockNodeService.
type MockNodeServiceMockRecorder struct {
	mock *MockNodeService
}

// NewMockNodeService creates a new mock instance.
func NewMockNodeService(ctrl *gomock.Controller) *MockNodeService {
	mock := &MockNodeService{ctrl: ctrl}
	mock.recorder = &MockNodeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeService) EXPECT() *MockNodeServiceMockRecorder {
	return m.recorder
}

// GetMultisigAlias mocks base method.
func (m *MockNodeService) GetMultisigAlias(arg0 string) (*model.AliasInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMultisigAlias", arg0)
	ret0, _ := ret[0].(*model.AliasInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMultisigAlias indicates an expected call of GetMultisigAlias.
func (mr *MockNodeServiceMockRecorder) GetMultisigAlias(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMultisigAlias", reflect.TypeOf((*MockNodeService)(nil).GetMultisigAlias), arg0)
}

// GetTx mocks base method.
func (m *MockNodeService) GetTx(arg0 string) (*model.TxInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTx", arg0)
	ret0, _ := ret[0].(*model.TxInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTx indicates an expected call of GetTx.
func (mr *MockNodeServiceMockRecorder) GetTx(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTx", reflect.TypeOf((*MockNodeService)(nil).GetTx), arg0)
}
